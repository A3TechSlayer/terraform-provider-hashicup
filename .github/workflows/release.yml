# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: read
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Download and decrypt GPG key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg --quiet --decrypt --batch --passphrase "${{ env.PASSPHRASE }}" \
              -o gpg_private_key ${{ secrets.GPG_PRIVATE_KEY }}
          gpg --list-secret-keys

      - name: Set GPG tty
        run: export GPG_TTY=$(tty)

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          args: release --clean
        env:
          # Avoid exposing GITHUB_TOKEN to GoReleaser
          # https://goreleaser.com/environment/
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}

      - name: Upload release assets
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: dist/

      - name: Create release
        uses: svenstaro/upload-release-action@v1.1.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.sha }}
          file: goreleaser/release.yml
          prerelease: false
          draft: false

