# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
  

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1 # v4.1.1
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@v4.1.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Start GPG agent
        run: gpg-agent --daemon
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6.0.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          # set this environment variable for your signing key
          fingerprint: "526FB2138171D7E4860EDF07666F0F24BC456E1A"
      - name: Check GPG key permissions
        run: |
          gpg --edit-key "526FB2138171D7E4860EDF07666F0F24BC456E1A"
          trust
          5
          save
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          args: release --clean
          # GitHub sets the GITHUB_TOKEN secret automatically.
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}